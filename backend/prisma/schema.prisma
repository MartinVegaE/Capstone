generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/**
 * =========================
 * MODELOS EN ESPAÑOL (PPP)
 * =========================
 */

model Producto {
  id            Int      @id @default(autoincrement())
  sku           String   @unique
  nombre        String
  marca         String?
  categoria     String?
  stock         Int      @default(0)
  ubicacion     String?
  codigoBarras  String?  @unique
  creadoEn      DateTime @default(now())
  actualizadoEn DateTime @updatedAt
  ppp           Decimal  @default(0) // Decimal sin @db.Numeric para SQLite

  // Lados opuestos de relaciones
  ingresoItems     IngresoItem[]
  stockMovimientos StockMovimiento[]
  movProyectoItems MovimientoProyectoItem[]
}

model Ingreso {
  id          Int      @id @default(autoincrement())
  fecha       DateTime @default(now())
  proveedor   String?
  documento   String?
  observacion String?

  items IngresoItem[]
}

model IngresoItem {
  id            Int       @id @default(autoincrement())
  ingresoId     Int
  productoId    Int
  cantidad      Int
  costoUnitario Decimal // sin @db.Numeric para SQLite
  lote          String?
  venceAt       DateTime?

  ingreso  Ingreso  @relation(fields: [ingresoId], references: [id])
  producto Producto @relation(fields: [productoId], references: [id])
}

model StockMovimiento {
  id            Int            @id @default(autoincrement())
  productoId    Int
  tipo          MovimientoTipo
  cantidad      Int
  costoUnitario Decimal? // sin @db.Numeric
  pppAntes      Decimal // sin @db.Numeric
  pppDespues    Decimal // sin @db.Numeric
  refTipo       RefTipo
  refId         Int?
  createdAt     DateTime       @default(now())

  producto Producto @relation(fields: [productoId], references: [id])
}

enum MovimientoTipo {
  IN
  OUT
  ADJUST
}

enum RefTipo {
  INGRESO
  VENTA
  AJUSTE
  PROYECTO_SALIDA
  PROYECTO_RETORNO
}

/**
 * ===================================
 * MODELOS EN INGLÉS
 * ===================================
 */

enum MovementType {
  IN
  OUT
  ADJUST
  SET
}

model Product {
  id        Int             @id @default(autoincrement())
  name      String
  sku       String          @unique
  stock     Int             @default(0)
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  movements StockMovement[]
}

model StockMovement {
  id        Int          @id @default(autoincrement())
  productId Int
  product   Product      @relation(fields: [productId], references: [id], onDelete: Cascade)
  type      MovementType
  delta     Int
  before    Int
  after     Int
  reason    String?
  source    String?
  actor     String?
  createdAt DateTime     @default(now())

  @@index([productId, createdAt])
}

enum ProyectoMovTipo {
  SALIDA
  RETORNO
}

model MovimientoProyecto {
  id          Int                      @id @default(autoincrement())
  proyecto    String
  tipo        ProyectoMovTipo
  fecha       DateTime                 @default(now())
  documento   String?
  observacion String?
  items       MovimientoProyectoItem[]
}

model MovimientoProyectoItem {
  id            Int      @id @default(autoincrement())
  movimientoId  Int
  productoId    Int
  cantidad      Int
  costoUnitario Decimal?

  movimiento MovimientoProyecto @relation(fields: [movimientoId], references: [id])
  producto   Producto           @relation(fields: [productoId], references: [id])
}
